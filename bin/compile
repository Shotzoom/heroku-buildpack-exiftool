#!/usr/bin/env bash
# bin/compile BUILD_DIR CACHE_DIR ENV_DIR

arrow() {
  sed -u 's/^/-----> /'
}
indent() {
  sed -u 's/^/       /'
}

## Fail immediately on non-zero exit code.
set -e
## Fail immediately on non-zero exit code within a pipeline.
set -o pipefail

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
BUILDPACK_DIR=`cd $(dirname $0)/..; pwd`

export_env_dir() {
  env_dir=$1
  whitelist_regex=${2:-'^(EXIFTOOL_URL_CUSTOM)$'}
  blacklist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH)$'}
  if [ -d "$env_dir" ]; then
    for e in $(ls $env_dir); do
      echo "$e" | grep -E "$whitelist_regex" | grep -qvE "$blacklist_regex" &&
      export "$e=$(cat $env_dir/$e)"
      :
    done
  fi
}

export_env_dir $ENV_DIR

if [ -z "$EXIFTOOL_URL_CUSTOM" ]; then
  echo "    -> Custom Exiftool URL is not set, start downloading from default location"
  # set default TARBALL_URL to v11.32
  TARBALL_URL="https://www.sno.phy.queensu.ca/~phil/exiftool/Image-ExifTool-11.32.tar.gz"
else
  TARBALL_URL="$EXIFTOOL_URL_CUSTOM"
fi

RENAME_DIR="$(echo "$TARBALL_URL" | perl -ne '/.+\/(.+)\.tar\.gz/ && print $1')"
VERSION_NO="$(echo "$RENAME_DIR"  | perl -ne '/ExifTool-(.+)$/i   && print $1')"

PROFILE_PATH="$BUILD_DIR/.profile.d"
TARGET_PATH="$BUILD_DIR/vendor"
VENDOR_PATH="/app/vendor"

echo "Installing exiftool $VERSION_NO" | arrow
mkdir -p "$TARGET_PATH"
cd       "$TARGET_PATH"

# download and unpack
echo "Fetching   $TARBALL_URL" | indent
curl --fail --retry 3 --retry-delay 1 --connect-timeout 3 "$TARBALL_URL" -s -o - | tar xzf -

# configure path
mkdir -p    "$PROFILE_PATH"
cat <<EOF > "$PROFILE_PATH/exiftool.sh"
export PATH="$VENDOR_PATH/exiftool:\$PATH"
EOF

# show installed version
mv "$RENAME_DIR" exiftool
cd             ./exiftool
echo "Installed: "`ls exif*` | indent
echo
